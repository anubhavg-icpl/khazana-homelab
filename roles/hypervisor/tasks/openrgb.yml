---
- name: Load i2c-dev module required for RAM effects
  become: true
  community.general.modprobe:
    name: i2c-dev
    state: present
    persistent: present
- name: Load i2c-piix4 required for Motherboard control
  become: true
  community.general.modprobe:
    name: i2c-piix4
    state: present
    persistent: present

- name: Check if OpenRGB AppImage exists
  ansible.builtin.stat:
    path: "{{ hypervisor_openrgb_install_path }}/{{ hypervisor_openrgb_executable }}"
  register: result

- name: Create OpenRGB directory
  become: true
  ansible.builtin.file:
    path: "{{ hypervisor_openrgb_install_path }}"
    state: directory
    mode: "0755"
  when: not result.stat.exists

- name: Download OpenRGB AppImage
  become: true
  ansible.builtin.get_url:
    url: "{{ hypervisor_openrgb_download_url }}"
    dest: "{{ hypervisor_openrgb_install_path }}/{{ hypervisor_openrgb_executable }}"
    mode: "0755"
  when: not result.stat.exists

- name: Check if OpenRGB configuration directory exists
  ansible.builtin.stat:
    path: "{{ hypervisor_openrgb_config }}"
  register: result

- name: Create OpenRGB config directory
  become: true
  ansible.builtin.file:
    path: "{{ hypervisor_openrgb_config }}"
    state: directory
    mode: "0755"
  when: not result.stat.exists

- name: Copy OpenRGB service file
  become: true
  ansible.builtin.template:
    src: templates/openrgb_service.j2
    dest: /etc/systemd/system/openrgb.service
    mode: "0644"

# This task should be run always since Udev rules are constantly updated
- name: Download OpenRGB udev rules executable
  become: true
  ansible.builtin.get_url:
    url: "{{ hypervisor_openrgb_udev_url }}"
    dest: "{{ hypervisor_openrgb_install_path }}/{{ hypervisor_openrgb_udev_executable }}"
    mode: "0755"

- name: Install OpenRGB udev rules
  become: true
  ansible.builtin.shell: "{{ hypervisor_openrgb_install_path }}/{{ hypervisor_openrgb_udev_executable }}"
